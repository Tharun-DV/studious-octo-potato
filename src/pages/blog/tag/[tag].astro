---
import { getCollection } from 'astro:content';
import BlogLayout from '../../../layouts/BlogLayout.astro';
import Header from '../../../components/Header.astro';
import SearchBar from '../../../components/SearchBar.astro';
import TagFilter from '../../../components/TagFilter.astro';
import BlogCard from '../../../components/BlogCard.astro';

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  const publishedPosts = posts.filter(post => !post.data.draft);
  
  // Get all unique tags
  const allTags = [...new Set(publishedPosts.flatMap(post => post.data.tags))];
  
  return allTags.map(tag => ({
    params: { tag },
    props: { tag },
  }));
}

const { tag } = Astro.props;
const allPosts = await getCollection('blog');
const publishedPosts = allPosts
  .filter(post => !post.data.draft)
  .sort((a, b) => b.data.pubDate.getTime() - a.data.pubDate.getTime());

const taggedPosts = publishedPosts.filter(post => 
  post.data.tags.includes(tag)
);

// Get all tags for the filter
const allTags = [...new Set(publishedPosts.flatMap(post => post.data.tags))];
---

<BlogLayout 
  title={`Posts tagged "${tag}" - M1NDB3ND3R`} 
  description={`All blog posts tagged with "${tag}" from M1NDB3ND3R - exploring computer science, algorithms, and programming.`}
>
  <Header />
  
  <main class="main">
    <div class="container">
      <section class="blog-header">
        <h1 class="page-title">Posts tagged "{tag}"</h1>
        <p class="page-description">
          {taggedPosts.length} post{taggedPosts.length !== 1 ? 's' : ''} found
        </p>
      </section>

      <section class="search-section">
        <SearchBar />
      </section>

      <section class="filter-section">
        <TagFilter allTags={allTags} selectedTag={tag} />
      </section>

      <section class="posts-section">
        <div class="posts-grid">
          {taggedPosts.map(post => (
            <BlogCard
              title={post.data.title}
              description={post.data.description}
              pubDate={post.data.pubDate}
              tags={post.data.tags}
              slug={post.slug}
              isProtected={!!post.data.password}
            />
          ))}
        </div>
        
        {taggedPosts.length === 0 && (
          <div class="no-posts">
            <p>No posts found with this tag. <a href="/blog">View all posts</a></p>
          </div>
        )}
      </section>
    </div>
  </main>
</BlogLayout>

<style>
  .main {
    min-height: 100vh;
  }

  .container {
    max-width: 1400px;
    margin: 0 auto;
    padding: 0 1rem;
  }

  .blog-header {
    padding: 3rem 0 2rem;
    text-align: center;
  }

  .page-title {
    font-size: 3rem;
    font-weight: 700;
    margin-bottom: 1rem;
  }

  .page-description {
    font-size: 1.2rem;
    color: #ccc;
    max-width: 600px;
    margin: 0 auto;
  }

  .search-section {
    padding: 1rem 0 2rem;
    max-width: 600px;
    margin: 0 auto;
  }

  .filter-section {
    margin-bottom: 2rem;
  }

  .posts-section {
    padding: 2rem 0 4rem;
  }

  .posts-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
    gap: 2rem;
  }

  .no-posts {
    text-align: center;
    padding: 4rem 0;
    color: #666;
    font-style: italic;
  }

  .no-posts a {
    color: #ffffff;
    text-decoration: underline;
  }

  @media (max-width: 768px) {
    .page-title {
      font-size: 2rem;
    }

    .page-description {
      font-size: 1.1rem;
    }

    .posts-grid {
      grid-template-columns: 1fr;
    }
  }
</style> 