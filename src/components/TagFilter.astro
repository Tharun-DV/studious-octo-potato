---
interface Props {
  allTags: string[];
  selectedTag?: string;
}

const { allTags, selectedTag } = Astro.props;
---

<div class="tag-filter">
  <div class="tag-filter-header">
    <h3>Filter by Tag</h3>
  </div>
  <div class="tags-container">
    <a 
      href="/blog" 
      class={`tag ${!selectedTag ? 'active' : ''}`}
    >
      All Posts
    </a>
    {allTags.map(tag => (
      <a 
        href={`/blog/tag/${tag}`} 
        class={`tag ${selectedTag === tag ? 'active' : ''}`}
      >
        {tag}
      </a>
    ))}
  </div>
</div>

<style>
  .tag-filter {
    margin-bottom: 2rem;
    padding: 1.5rem;
    background-color: #1a1a1a;
    border-radius: 0.5rem;
    border: 1px solid #333;
  }

  .tag-filter-header {
    margin-bottom: 1rem;
  }

  .tag-filter-header h3 {
    font-size: 1.1rem;
    color: #ccc;
    margin: 0;
  }

  .tags-container {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }

  .tag {
    display: inline-block;
    padding: 0.5rem 1rem;
    background-color: #333;
    color: #ccc;
    border-radius: 0.25rem;
    text-decoration: none;
    font-size: 0.9rem;
    transition: all 0.3s ease;
    border: 1px solid transparent;
  }

  .tag:hover {
    background-color: #444;
    color: #ffffff;
    transform: translateY(-1px);
  }

  .tag.active {
    background-color: #ffffff;
    color: #000000;
    border-color: #ffffff;
  }

  @media (max-width: 768px) {
    .tags-container {
      justify-content: center;
    }
  }
</style> 